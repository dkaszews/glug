name: Verify
on:
  workflow_dispatch:
  push: { branches: main }
  pull_request:

# TODO: clang-format, clang-tidy
jobs:
  unit-test:
    name: UT
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        toolchain: [ gcc, clang ]
        mode: [ debug ]
        include:
          - { os: windows-latest, toolchain: msvc, mode: debug }
          - { os: windows-latest, toolchain: gcc, mode: coverage }
          - { os: ubuntu-latest, toolchain: gcc, mode: coverage }
        exclude:
          # Linker failure, debug flags mismatch
          - { os: windows-latest, toolchain: clang }
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: '>=3.0.1'
          actions-cache-folder: .xmake-cache
          package-cache: true
          package-cache-key: ${{ matrix.os }}.${{ matrix.toolchain }}.${{ matrix.mode }}
          project-path: glug
      - name: Configure
        run: xmake config -vy --toolchain=${{ matrix.toolchain }} --mode=${{ matrix.mode }}
      - name: Build
        run: xmake build -v
      - name: Test
        timeout-minutes: 5
        run: xmake test -v
      - uses: threeal/gcovr-action@v1.2.0
        if: matrix.mode == 'coverage'
        with:
          html-out: coverage_report.html
          html-details: true
          json-out: coverage_report.json
          json-pretty: true
          print-summary: true
      - uses: actions/upload-artifact@v4
        if: always() && matrix.mode == 'coverage'
        with:
          name: coverage_${{ matrix.os }}
          path: coverage_report.html
  clang-format:
    name: clang-format
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format style check for C/C++/Protobuf programs.
        uses: jidicula/clang-format-action@v4.15.0
        with:
          clang-format-version: 20

